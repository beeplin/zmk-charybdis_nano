#include <behaviors.dtsi>
#include <behaviors/mouse_keys.dtsi>
#include <dt-bindings/zmk/bl.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&lt { flavor = "hold-preferred"; };
&sk { release-after-ms = <5000>; quick-release; };

/ {
    behaviors {
        ls: layer_sticky { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&mo>, <&sk>; };
        ms: mod_sticky   { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&sk>; };
        mm: mod_mouse    { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&mkp>; };
        mc: mod_capsword { compatible = "zmk,behavior-hold-tap"; #binding-cells = <2>; flavor = "hold-preferred"; tapping-term-ms = <200>; bindings = <&kp>, <&caps_word>; };
    };
    combos {
        compatible = "zmk,combos";
        alt      { bindings = <&kp LALT>;     key-positions = <31 34>; };
        shft_alt { bindings = <&kp LS(LALT)>; key-positions = <31 33>; };
        ctrl_alt { bindings = <&kp LC(LALT)>; key-positions = <32 34>; };
    };
    keymap {
        compatible = "zmk,keymap";
        layer_0 { bindings = <
&kp Q               &kp W               &kp F               &kp P               &kp B                   &kp J               &kp L               &kp U               &kp Y               &kp SEMI
&kp A               &kp R               &kp S               &kp T               &kp G                   &kp M               &kp N               &kp E               &kp I               &kp O
&kp Z               &kp X               &kp C               &kp D               &kp V                   &kp K               &kp H               &kp COMMA           &kp DOT             &kp FSLH
                                        &lt 3 LALT          &lt 2 SPACE         &kp LCTRL               &kp RSHFT           &lt 4 RGUI >; };
        layer_1 { bindings = <
&trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
&trans              &trans              &trans              &trans              &trans                  &trans              &trans              &trans              &trans              &trans
&trans              &trans              &trans              &trans              &trans                  &trans              &mkp LCLK           &mkp MCLK           &mkp RCLK           &kp RSHFT
                                        &trans              &trans              &trans                  &trans              &trans >; };
        layer_2 { bindings = <
&kp LALT            &kp BSPC            &kp UP              &kp DEL             &kp PG_UP               &kp PLUS            &kp N7              &kp N8              &kp N9              &kp LALT 
&mt LCTRL ESC       &kp LEFT            &kp ENTER           &kp RIGHT           &kp TAB                 &kp ASTRK           &kp N4              &kp N5              &kp N6              &kp N0
&mt LSHFT INS       &kp HOME            &kp DOWN            &kp END             &kp PG_DN               &kp MINUS           &kp N1              &kp N2              &kp N3              &kp RSHFT
                                        &none               &none               &none                   &mc RSHFT CAPS      &kp RGUI >; };
        layer_3 { bindings = <
&kp LALT            &kp F9              &kp F8              &kp F7              &kp F12                 &kp C_BRI_UP        &kp C_MUTE          &kp C_VOL_DN        &kp C_VOL_UP        &kp LALT
&kp LCTRL           &kp F6              &kp F5              &kp F4              &kp F11                 &kp C_BRI_DN        &mt RCTRL C_PP      &mt RSHFT C_PREV    &mt LALT C_NEXT     &kp RCTRL
&kp LSHFT           &kp F3              &kp F2              &kp F1              &kp F10                 &kp K_APP           &kp PSCRN           &kp SLCK            &kp PAUSE_BREAK     &kp RSHFT
                                        &none               &none               &mo 5                   &mt RSHFT CAPS      &kp RGUI >; };
        layer_4 { bindings = <
&kp EXCL            &kp AT              &kp POUND           &kp DLLR            &kp PRCNT               &kp CARET           &kp AMPS            &kp ASTRK           &kp LPAR            &kp RPAR
&kp GRAVE           &kp MINUS           &kp EQUAL           &kp LBKT            &kp RBKT                &kp BSLH            &kp SQT             &kp LPAR            &kp RPAR            &kp COLON
&kp TILDE           &kp UNDER           &kp PLUS            &kp LBRC            &kp RBRC                &kp PIPE            &kp DQT             &kp LT              &kp GT              &kp QMARK
                                        &kp LALT            &kp UNDER           &kp LCTRL               &none               &none >; };
        layer_5 { bindings = <
&bt BT_SEL 0        &bt BT_SEL 1        &bt BT_SEL 2        &bt BT_SEL 3        &bt BT_SEL 4            &rgb_ug RGB_SPI     &rgb_ug RGB_HUI     &rgb_ug RGB_SAI     &rgb_ug RGB_BRI     &rgb_ug RGB_EFR
&bt BT_DISC 0       &bt BT_DISC 1       &bt BT_DISC 2       &bt BT_DISC 3       &bt BT_DISC 4           &rgb_ug RGB_SPD     &rgb_ug RGB_HUD     &rgb_ug RGB_SAD     &rgb_ug RGB_BRD     &rgb_ug RGB_EFF
&bootloader         &none               &none               &bt BT_CLR          &out OUT_TOG            &rgb_ug RGB_TOG     &bl BL_TOG          &bl BL_CYCLE        &none               &bootloader
                                        &none               &none               &none                   &none               &none >; }; // &default_report     &studio_unlock
    };
};
